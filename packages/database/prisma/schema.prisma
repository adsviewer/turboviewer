// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
  output          = "../.prisma"
}

generator json {
  provider = "prisma-json-types-generator"
}

generator pothos {
  provider = "prisma-pothos-types"
}

model Organization {
  id           String        @id @default(cuid())
  name         String
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @default(now()) @updatedAt @map("updated_at")
  users        User[]
  randomString String        @default(cuid())
  integrations Integration[]

  @@map("organizations")
}

model User {
  id             String       @id @default(cuid())
  firstName      String       @map("first_name")
  lastName       String       @map("last_name")
  email          String       @unique @db.Citext
  password       String?
  photo          String?      @map("photo_url")
  googleId       String?      @unique @map("google_id")
  roles          UserRole[]
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String       @map("organization_id")
  createdAt      DateTime     @default(now()) @map("created_at")
  updatedAt      DateTime     @default(now()) @updatedAt @map("updated_at")

  @@map("users")
}

enum RoleEnum {
  USER
  ADMIN
}

model UserRole {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  user      User     @relation(fields: [userId], references: [id])
  role      RoleEnum
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("user_roles")
}

enum IntegrationTypeEnum {
  META
  TIKTOK
  LINKEDIN
}

enum IntegrationStatus {
  CONNECTED
  REVOKED
}

model Integration {
  id             String @id @default(cuid())
  organizationId String @map("organization_id")

  type       IntegrationTypeEnum
  externalId String              @map("external_id")

  accessToken           String            @map("access_token")
  refreshToken          String?           @map("refresh_token")
  accessTokenExpiresAt  DateTime          @map("access_token_expires_at")
  refreshTokenExpiresAt DateTime?         @map("refresh_token_expires_at")
  status                IntegrationStatus

  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
  createdAt DateTime @default(now()) @map("created_at")

  organization Organization @relation(fields: [organizationId], references: [id])
  adAccounts   AdAccount[]

  @@unique([organizationId, type])
  @@unique([externalId, type])
  @@map("integrations")
}

model AdAccount {
  id            String @id @default(cuid())
  integrationId String @map("integration_id")

  externalId String       @map("external_id")
  name       String       @default("No name") // TODO: remove this once all ad accounts have a name
  currency   CurrencyEnum

  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
  createdAt DateTime @default(now()) @map("created_at")

  integration    Integration @relation(fields: [integrationId], references: [id])
  advertisements Ad[]
  creatives      Creative[]
  Insight        Insight[]

  @@unique([integrationId, externalId])
  @@map("ad_accounts")
}

model Ad {
  id          String  @id @default(cuid())
  adAccountId String  @map("ad_account_id")
  creativeId  String?

  externalId String    @map("external_id")
  name       String    @default("No name") // TODO: remove this once all ads have a name
  adAccount  AdAccount @relation(fields: [adAccountId], references: [id])
  insights   Insight[]
  creative   Creative? @relation(fields: [creativeId], references: [id])

  @@unique([adAccountId, externalId])
  @@map("ads")
}

enum DeviceEnum {
  MobileWeb
  MobileApp
  Desktop
  Unknown
}

enum PublisherEnum {
  Facebook
  Instagram
  Messenger
  AudienceNetwork
  LinkedIn
  TikTok
  Unknown
}

model Creative {
  id          String   @id @default(cuid())
  adAccountId String   @map("ad_account_id")
  name        String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")

  adAccount AdAccount @relation(fields: [adAccountId], references: [id])
  ads       Ad[]

  @@unique([adAccountId, name])
  @@map("creatives")
}

model Insight {
  id String @id @default(cuid())

  // TODO: both should be required. After a run they should be populated.
  adAccountId String?       @map("ad_account_id")
  currency    CurrencyEnum?

  adId        String        @map("ad_id")
  date        DateTime
  impressions Int
  /// Amount of money spent on the ad in cents
  spend       Int
  device      DeviceEnum
  publisher   PublisherEnum
  position    String

  ad        Ad         @relation(fields: [adId], references: [id])
  adAccount AdAccount? @relation(fields: [adAccountId], references: [id])

  @@unique([adId, date, device, publisher, position])
  @@index([adAccountId])
  @@index([currency])
  @@index([date])
  @@index([impressions])
  @@index([spend])
  @@index([device])
  @@index([publisher])
  @@index([position])
  @@map("insights")
}

enum CurrencyEnum {
  AFN
  ALL
  DZD
  USD
  EUR
  AOA
  XCD
  ARS
  AMD
  AWG
  AUD
  AZN
  BSD
  BHD
  BDT
  BBD
  BYN
  BZD
  XOF
  BMD
  BTN
  INR
  BOB
  BOV
  BAM
  BWP
  NOK
  BRL
  BND
  BGN
  BIF
  CVE
  KHR
  XAF
  CAD
  KYD
  CLF
  CLP
  CNY
  COP
  COU
  KMF
  CDF
  NZD
  CRC
  CUC
  CUP
  ANG
  CZK
  DKK
  DJF
  DOP
  EGP
  SVC
  ERN
  ETB
  FKP
  FJD
  XPF
  GMD
  GEL
  GHS
  GIP
  GTQ
  GBP
  GNF
  GYD
  HTG
  HNL
  HKD
  HUF
  ISK
  IDR
  XDR
  IRR
  IQD
  ILS
  JMD
  JPY
  JOD
  KZT
  KES
  KPW
  KRW
  KWD
  KGS
  LAK
  LBP
  LSL
  ZAR
  LRD
  LYD
  CHF
  MOP
  MGA
  MWK
  MYR
  MVR
  MRU
  MUR
  XUA
  MXN
  MXV
  MDL
  MNT
  MAD
  MZN
  MMK
  NAD
  NPR
  NIO
  NGN
  OMR
  PKR
  PAB
  PGK
  PYG
  PEN
  PHP
  PLN
  QAR
  MKD
  RON
  RUB
  RWF
  SHP
  WST
  STN
  SAR
  RSD
  SCR
  SLE
  SGD
  XSU
  SBD
  SOS
  SSP
  LKR
  SDG
  SRD
  SZL
  SEK
  CHE
  CHW
  SYP
  TWD
  TJS
  TZS
  THB
  TOP
  TTD
  TND
  TRY
  TMT
  UGX
  UAH
  AED
  USN
  UYI
  UYU
  UZS
  VUV
  VEF
  VED
  VND
  YER
  ZMW
  ZWL
}

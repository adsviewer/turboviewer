query getOrganization {
  organization {
    id
    tier
    userOrganizations {
      userId
      role
      status
      user {
        id
        email
        firstName
        lastName
        photoUrl
      }
    }
  }
}

mutation updateOrganizationUser($userId: String!, $role: OrganizationRoleEnum) {
  updateOrganizationUser(userId: $userId, role: $role) {
    role
    organization {
      id
    }
  }
}

mutation createOrganization($name: String!, $users: [UserRolesInput!]) {
  createOrganization(name: $name, users: $users) {
    id
    name
  }
}

mutation updateOrganization($name: String!) {
  updateOrganization(name: $name) {
    id
    name
  }
}

mutation switchOrganization($organizationId: String!) {
  switchOrganization(organizationId: $organizationId) {
    token
    refreshToken
  }
}

mutation deleteOrganization($organizationId: String!) {
  deleteOrganization(organizationId: $organizationId) {
    id
  }
}

mutation inviteUsers($emails: [String!]!, $role: OrganizationRoleEnum!) {
  inviteUsers(emails: $emails, role: $role) {
    ... on MutationInviteUsersSuccess {
      data
    }
    ... on InviteUsersErrors {
      error {
        email
        message
      }
    }
  }
}

query availableOrganizationAdAccounts($channel: IntegrationType!) {
  availableOrganizationAdAccounts(channel: $channel) {
    id
    adCount
    name
    isConnectedToCurrentOrg
  }
}

mutation removeUserFromOrganization($userId: String!) {
  removeUserFromOrganization(userId: $userId)
}

query organizationAdAccounts($channel: IntegrationType!) {
  organizationAdAccounts(channel: $channel) {
    id
    adCount
    name
  }
}

mutation updateOrganizationAdAccounts($adAccountIds: [String!]!, $channel: IntegrationType!) {
  updateOrganizationAdAccounts(adAccountIds: $adAccountIds, integrationType: $channel) {
    id
  }
}

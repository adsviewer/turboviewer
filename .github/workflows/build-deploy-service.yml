name: Build and push service image

on:
  workflow_call:
    inputs:
      aws_region:
        required: true
        type: string
      environment:
        required: true
        type: string
      github_role:
        required: true
        type: string
      github-organization:
        required: true
        type: string
      organization:
        required: true
        type: string
      service_name:
        required: true
        type: string
    secrets:
      aws_account_id:
        required: true
      turbo_team:
        required: true
      turbo_token:
        required: true
      sentry_auth_token:
        required: true

jobs:

  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
#          - linux/arm64
    permissions:
      id-token: write
      contents: read
      packages: write

    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.aws_account_id }}:role/${{ inputs.github_role }}
          role-session-name: ${{ inputs.environment }}
          aws-region: ${{ inputs.aws_region }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: true

      - name: Build server
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.environment }}-${{ inputs.service_name }}:${{ (contains(matrix.platform,'arm') && 'arm') || (contains(matrix.platform,'amd') && 'amd') }}-${{ github.sha }}
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.environment }}-${{ inputs.service_name }}:${{ (contains(matrix.platform,'arm') && 'arm') || (contains(matrix.platform,'amd') && 'amd') }}-latest
          context: .
          build-args: |
            TURBO_TEAM=${{ secrets.turbo_team }}
            TURBO_TOKEN=${{ secrets.turbo_token }}
            SENTRY_AUTH_TOKEN=${{ secrets.sentry_auth_token }}
          file: ./apps/${{ inputs.service_name }}/Dockerfile
          platforms: ${{ matrix.platform }}
          cache-from: type=registry,ref=ghcr.io/${{ inputs.github-organization }}/${{ inputs.service_name }}:${{ inputs.environment }}-${{ (contains(matrix.platform,'arm') && 'arm') || (contains(matrix.platform,'amd') && 'amd') }}-cache
          cache-to: type=registry,ref=ghcr.io/${{ inputs.github-organization }}/${{ inputs.service_name }}:${{ inputs.environment }}-${{ (contains(matrix.platform,'arm') && 'arm') || (contains(matrix.platform,'amd') && 'amd') }}-cache,mode=max

  db-migrate:

    runs-on: ubuntu-latest

    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read
      packages: write

    needs:
      - build

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.aws_account_id }}:role/${{ inputs.github_role }}
          role-session-name: ${{ inputs.environment }}
          aws-region: ${{ inputs.aws_region }}

      - uses: dkershner6/aws-ssm-getparameters-action@v2
        with:
          parameterPairs: "/prod/server/database_url = DATABASE_URL"

      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: |
            - node_modules/**/*
            - .turbo
            - apps/web/.next/cache/**/*
            - apps/web/.turbo

          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - uses: pnpm/action-setup@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          pnpm install
          pnpm --filter=database generate


      - name: Db migrate
        run:  pnpm --filter=database db:migrate:deploy
